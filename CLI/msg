#!/usr/bin/env node

const superagent = require('superagent');

console.log(process.argv)

//const chalk = require('chalk');
const args = process.argv;

switch (process.argv[2]) {
case "help":
  help();
  break;
case "signup":
  signup();
  break;
case "create":
    create();
    break;
default: throw new Error()
};

}

// presents the help guide to the user
function help() {
  const usageText = `
        this msg app allows you to  helps you manage you todo tasks.

        usage:
            msg <command>

            commands can be:

            signup <username> <password>:                   used to create a new user
            signin <username> <password>:                   used to authenticate with the server
            create <-t title (optional)> <message>:         used to create a new message
            read:                                           used to retrieve all messages (authentication not required)
            update <id> <-t title (optional)> <message>:    used to update a message (admin only)
            delete <id>:                                    used to delete a message (admin only)
            help:                                           used to print the usage guide
    `

  console.log(usageText)
}

//usage: ./msg signup username password
async function signup() {
  try {
    // we will save the token
    // and confirm to the user on the CLI that we have logged them in
    // or access denied.
    let username = process.argv[3];
    let password = process.argv[4];
    let url = "http://localhost:3000/signup";
    let data = await superagent.post(url).send({ username, password, role: 'writer' });
    let token = data.body.token;
    console.log(token);
  }
  catch (error) {
    console.error("You didn't provide a valid username and password", error);
  }

}

async function create() {
  try {
    let title = process.argv[3]
    let message = process.argv[4];
    let url = "http://localhost:3000/api/v2/messages";
    let data = await (await superagent.post(url)).send({ username: user, title, message, role: 'writer' });
    let token = data.body.token;
    console.log(token);
  }
  catch (error) {
    console.error("You did not enter a message", error);
  }
}
// used to log errors to the console in red color
function errorLog(error) {
  const eLog = chalk.red(error)
  console.log(eLog)
}

// we make sure the length of the arguments is exactly three
if (args.length > 6) {
  errorLog(`only four arguments can be accepted`)
  usage()
}