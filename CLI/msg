#!/usr/bin/env node

/*

[dina]      [X] signup <username> <password>:                   used to create a new user
[garrett]   [ ] signin <username> <password>:                   used to authenticate with the server
            [ ] create <-t title (optional)> <message>:         used to create a new message
            [ ] read:                                           used to retrieve all messages (authentication not required)
            [ ] update <id> <-t title (optional)> <message>:    used to update a message (admin only)
            [ ] delete <id>:                                    used to delete a message (admin only)
[dina/src]  [X] help:                                           used to print the usage guide

*/
const superagent = require('superagent');

console.log(process.argv)

const chalk = require('chalk');
const args = process.argv;

var token = '';
var user = '';

switch (process.argv[2]) {
    case "help":
        help();
        break;
    case "signup":
        if (args.length !== 5) handleErrors('Incorrect number of arguments. Type ./msg help to see instructions.');
        signup();
        break;
    case "read":
        if (args.length < 3 || args.length > 4) handleErrors('Incorrect number of arguments. Type ./msg help to see instructions.');
        read();
        break;
    case "create":
        create();
        break;
    default:
        handleErrors();
        break;
};


// presents the help guide to the user
function help() {
    const usageText = `
        this msg app allows you to  helps you manage you todo tasks.

        usage:
            msg <command>

            commands can be:

            signup <username> <password>:                   used to create a new user
            signin <username> <password>:                   used to authenticate with the server
            create <-t title (optional)> <message>:         used to create a new message
            read:                                           used to retrieve all messages (authentication not required)
            update <id> <-t title (optional)> <message>:    used to update a message (admin only)
            delete <id>:                                    used to delete a message (admin only)
            help:                                           used to print the usage guide
    `

    console.log(usageText)
}

//usage: ./msg signup username password
async function signup() {
    try {
        //get the username and password from the arguments sent
        let username = process.argv[3];
        let password = process.argv[4];
        let url = "http://localhost:3000/signup";
        let data = await superagent.post(url).send({ username, password, role: 'writer' });
        token = data.body.token;
        user = data.body.username;
    }
    catch (error) {
        handleErrors("Could not sign you up, please make sure you're following the help instructions", error);
    }

}

async function create() {
    try {
        let title = process.argv[3]
        let message = process.argv[4];
        let url = "http://localhost:3000/api/v2/messages";
        let data = await (await superagent.post(url)).send({ username: user, title, message, role: 'writer' });
        let token = data.body.token;
        console.log(token);
    }
    catch (error) {
        console.error("You did not enter a message", error);
    }

}

async function read() {
    try {
        let url = "http://localhost:3000/api/v1/messages" + process.argv.length===4? "/process.argv[4]" : "";
        let data = await superagent.get(url);
        data.body.forEach(entry => {
            console.log(entry);
        })
    }
    catch (error) {
        handleErrors('', error)
    }
}

// used to log errors to the console in red color
function handleErrors(message, error) {
    console.log(message);
    if (error) {
        const eLog = chalk.red(error);
        console.log(eLog)
    }
}

// we make sure the length of the arguments is exactly three
if (args.length > 6) {
    handleErrors(`Only four or fewer arguments can be accepted`);
    help();
}